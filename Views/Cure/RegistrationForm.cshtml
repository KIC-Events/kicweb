@model KiCData.Models.WebModels.RegistrationViewModel

<div class="container">
  <section class="page-section" aria-labelledby="registration-form-title">
    <h1 class="h2">CURE 2026 Registration</h1>    
    <div class="content body-text">
      <p>
        This form collects some personal information. This information is intended only for internal use and for performing actions related to event safety, namely background checks. The data collected here will be securely stored and never sold. We recognize that privacy is of paramount concern for an event of this type, and we will take all reasonable steps to secure and protect your data.
      </p>
      <p>
        This information is used for the background check, and must match your identification exactly. Avoid nicknames, abbreviates, etc. This information will be checked against your ID at the time of the event.
      </p>
      <p>
        <em style="color: var(--color-red)">* Indicates required field</em>
      </p>
    </div>
    <form asp-action="RegistrationForm" method="post">
      <div class="field radio-group">
        <label asp-for="TicketType"></label>
        @Html.DescriptionFor(m => m.TicketType)
        @for (int i = 0; i < Model.TicketTypes.Count; i++)
        {
            var item = Model.TicketTypes[i];
            <div class="radio">
              <input
                type="radio"
                name="TicketType"
                id="ticket_@i"
                value="@item.Value"
                asp-for="TicketType"
              />
              <label for="ticket_@i">@item.Text</label>
            </div>
        }
      </div>

      @Html.HiddenFor(m => m.RegId)

      @* First name *@
      <div class="field">
        <label asp-for="FirstName"></label>
        @Html.DescriptionFor(m => m.FirstName)
        <input asp-for="FirstName" required />
        <span asp-validation-for="FirstName"></span>
      </div>

      @* Last name *@
      <div class="field">
        <label asp-for="LastName"></label>
        @Html.DescriptionFor(m => m.LastName)
        <input asp-for="LastName" required />
        <span asp-validation-for="LastName"></span>
      </div>

      @* Email *@
      <div class="field">
        <label asp-for="Email"></label>
        @Html.DescriptionFor(m => m.Email)
        <input asp-for="Email" type="email" required placeholder="@Html.PromptFor(m => m.Email)" />
        <span asp-validation-for="Email"></span>
      </div>

      @* Email Confirmation *@
      <div class="field">
        <label asp-for="EmailConf"></label>
        @Html.DescriptionFor(m => m.EmailConf)
        <input asp-for="EmailConf" type="email" required placeholder="@Html.PromptFor(m => m.EmailConf)" />
        <span asp-validation-for="EmailConf"></span>
      </div>

      @* Date of Birth *@
      <div class="field">
        <label asp-for="DateOfBirth"></label>
        @Html.DescriptionFor(m => m.DateOfBirth)
        <input asp-for="DateOfBirth" type="date" required />
        <span asp-validation-for="DateOfBirth"></span>
      </div>

      @* Sex Listed On ID *@
      <div class="field">
        <label asp-for="SexOnID"></label>
        @Html.DescriptionFor(m => m.SexOnID)
        <select asp-for="SexOnID" required>
          <option value="">Select a value</option>
          <option value="M">Male</option>
          <option value="F">Female</option>
        </select>
        <span asp-validation-for="SexOnID"></span>
      </div>

      @* Pronouns *@
      <div class="field">
        <label asp-for="Pronouns"></label>
        @Html.DescriptionFor(m => m.Pronouns)
        <input asp-for="Pronouns" />
        <span asp-validation-for="Pronouns"></span>
      </div>

      @* Phone Number *@
      <div class="field">
        <label asp-for="PhoneNumber"></label>
        @Html.DescriptionFor(m => m.PhoneNumber)
        <input asp-for="PhoneNumber" type="tel" required />
        <span asp-validation-for="PhoneNumber"></span>
      </div>

      @* City *@
      <div class="field">
        <label asp-for="City"></label>
        @Html.DescriptionFor(m => m.City)
        <input asp-for="City" required />
        <span asp-validation-for="City"></span>
      </div>

      @* State *@
      <div class="field">
        <label asp-for="State"></label>
        @Html.DescriptionFor(m => m.State)
        <select required asp-for="State">
          <option value="">Select a state</option>
          <option value="AL">Alabama</option>
          <option value="AK">Alaska</option>
          <option value="AZ">Arizona</option>
          <option value="AR">Arkansas</option>
          <option value="CA">California</option>
          <option value="CO">Colorado</option>
          <option value="CT">Connecticut</option>
          <option value="DE">Delaware</option>
          <option value="FL">Florida</option>
          <option value="GA">Georgia</option>
          <option value="HI">Hawaii</option>
          <option value="ID">Idaho</option>
          <option value="IL">Illinois</option>
          <option value="IN">Indiana</option>
          <option value="IA">Iowa</option>
          <option value="KS">Kansas</option>
          <option value="KY">Kentucky</option>
          <option value="LA">Louisiana</option>
          <option value="ME">Maine</option>
          <option value="MD">Maryland</option>
          <option value="MA">Massachusetts</option>
          <option value="MI">Michigan</option>
          <option value="MN">Minnesota</option>
          <option value="MS">Mississippi</option>
          <option value="MO">Missouri</option>
          <option value="MT">Montana</option>
          <option value="NE">Nebraska</option>
          <option value="NV">Nevada</option>
          <option value="NH">New Hampshire</option>
          <option value="NJ">New Jersey</option>
          <option value="NM">New Mexico</option>
          <option value="NY">New York</option>
          <option value="NC">North Carolina</option>
          <option value="ND">North Dakota</option>
          <option value="OH">Ohio</option>
          <option value="OK">Oklahoma</option>
          <option value="OR">Oregon</option>
          <option value="PA">Pennsylvania</option>
          <option value="RI">Rhode Island</option>
          <option value="SC">South Carolina</option>
          <option value="SD">South Dakota</option>
          <option value="TN">Tennessee</option>
          <option value="TX">Texas</option>
          <option value="UT">Utah</option>
          <option value="VT">Vermont</option>
          <option value="VA">Virginia</option>
          <option value="WA">Washington</option>
          <option value="WV">West Virginia</option>
          <option value="WI">Wisconsin</option>
          <option value="WY">Wyoming</option>
        </select>
        <span asp-validation-for="State"></span>
      </div>

      @* Fet Name *@
      <div class="field">
        <label asp-for="FetName"></label>
        @Html.DescriptionFor(m => m.FetName)
        <input asp-for="FetName" />
        <span asp-validation-for="FetName"></span>
      </div>

      @* Club ID *@
      <div class="field">
        <label asp-for="ClubId"></label>
        @Html.DescriptionFor(m => m.ClubId)
        <input asp-for="ClubId" />
        <span asp-validation-for="ClubId"></span>
      </div>

      @* Badge Name *@
      <div class="field">
        <label asp-for="BadgeName"></label>
        @Html.DescriptionFor(m => m.BadgeName)
        <input asp-for="BadgeName" required />
        <span asp-validation-for="BadgeName"></span>
      </div>

      @* Select Room Type *@
      <div class="field radio-group">
        <label asp-for="RoomType"></label>
        <div class="field__description">
          <p>Please indicate whether you will be staying at the host hotel, and if so, what type of room you would like.</p>
          <p>If you are attending as a group, <strong>only one person PER ROOM</strong> needs to select a room type for their ticket.</p>
          <p>Due to the limited number of rooms at the host hotel, all rooms are being assigned by order of request. Selection of room preference does not guarantee room placement. To handle this, everyone will be added to a queue and room selection will be processed in the order tickets were purchased.</p>
        </div>
        @for (int i = 0; i < Model.RoomTypes.Count; i++)
        {
            var item = Model.RoomTypes[i];
            <div class="radio">
              <input
                type="radio"
                name="RoomType"
                id="room_@i"
                value="@item.Value"
                asp-for="RoomType"
              />
              <label for="room_@i">@item.Text</label>
            </div>
        }
      </div>

      <button class="button button--secondary" type="submit" name="action" value="CreateMore">Register another</button>
      <button class="button" type="submit" name="action" value="Checkout">Checkout</button>
    </form>
  </section>
</div>